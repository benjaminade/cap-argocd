apiVersion: v1
kind: Namespace
metadata:
  name: argocd

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: argocd
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-application-controller
  namespace: argocd

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-dex-server
  namespace: argocd

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-redis
  namespace: argocd

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-repo-server
  namespace: argocd

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-server
  namespace: argocd

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-application-controller
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: application-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: application-controller
    spec:
      serviceAccountName: argocd-application-controller
      containers:
        - name: application-controller
          image: quay.io/argoproj/argocd-application-controller:v2.1.0
          command:
            - argocd-application-controller
          args:
            - --loglevel=info

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-dex-server
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dex-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dex-server
    spec:
      serviceAccountName: argocd-dex-server
      containers:
        - name: dex-server
          image: quay.io/argoproj/argocd-dex:v2.1.0
          command:
            - argocd-dex
          args:
            - --log-level=info

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-redis
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
    spec:
      serviceAccountName: argocd-redis
      containers:
        - name: redis
          image: redis:alpine
          command:
            - redis-server
          args:
            - /usr/local/etc/redis/redis.conf
          volumeMounts:
            - name: redis-config
              mountPath: /usr/local/etc/redis/
      volumes:
        - name: redis-config
          configMap:
            name: argocd-redis-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-repo-server
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: repo-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: repo-server
    spec:
      serviceAccountName: argocd-repo-server
      containers:
        - name: repo-server
          image: quay.io/argoproj/argocd-repo-server:v2.1.0
          command:
            - argocd-repo-server
          args:
            - --loglevel=info

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server
    spec:
      serviceAccountName: argocd-server
      containers:
        - name: server
          image: quay.io/argoproj/argocd:v2.1.0
          command:
            - argocd-server
          args:
            - --staticassets=/shared/app
            - --insecure
            - --repo-server=argocd-repo-server:8081
            - --dex-server=argocd-dex-server:5556
            - --redis=argocd-redis:6379
            - --loglevel=info
